package com.example.mdd_

import android.app.Application
import android.content.Intent
import android.content.Intent.FLAG_ACTIVITY_NEW_TASK
import android.os.Looper
import androidx.appcompat.app.AlertDialog
import java.net.SocketTimeoutException

class Startup : Application() {

    override fun onCreate() {
        super.onCreate()
        // Place your code here which will be executed only once

        try {
            Thread {
                try{
                    Helper.sendPostRequest("reset", "")
                    val resp = Helper.sendGetRequest("status")
                    var intent : Intent

                    if (resp == "{\n   \"state\": \"AWAITING_INIT_CALL\"\n }") {
                        Helper.sendPostRequest("init_provisioning", "")
                        intent = Intent(this, CertActivity::class.java)
                    } else if (resp == "{\n   \"state\": \"AWAITING_SIGNED_CERTIFICATE\"\n }") {
                        intent = Intent(this, CertActivity::class.java)
                    } else if (resp == "{\n   \"state\": \"AWAITING_PASSWORD\"\n }") {
                        intent = Intent(this, PassActivity::class.java)
                    } else if (resp == "{\n   \"state\": \"AWAITING_SK_ACK\"\n }") {
                        intent = Intent(this, SKActivity::class.java)
                    } else {
                        intent = Intent(this, NFCActivity::class.java)
                    }
                    intent.flags = FLAG_ACTIVITY_NEW_TASK
                    startActivity(intent)

                }catch (e: SocketTimeoutException){
                    val intent = Intent(this, LoadingActivity::class.java)
                    intent.flags = FLAG_ACTIVITY_NEW_TASK
                    applicationContext.startActivity(intent)
                }
            }.start()

        } catch (e: SocketTimeoutException){
            val intent = Intent(this, LoadingActivity::class.java)
            intent.flags = FLAG_ACTIVITY_NEW_TASK
            appl